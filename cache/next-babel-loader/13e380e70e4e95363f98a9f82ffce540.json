{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport Head from \"next/head\";\nimport { Header } from \"@components/common\";\nexport function Layout(props) {\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: props.title\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: props.description\n      })]\n    }), /*#__PURE__*/_jsx(Header, {}), /*#__PURE__*/_jsx(\"main\", {\n      className: \"container mx-auto max-w-3xl px-6 md:px-9 py-5 md:py-10\",\n      children: props.children\n    })]\n  });\n} // import { useState, useEffect } from \"react\";\n// import clsx from \"clsx\";\n// import Link from \"next/link\";\n// import { useRouter } from \"next/router\";\n// import { DarkModeSwitch } from \"react-toggle-dark-mode\";\n// import { useTheme } from \"next-themes\";\n// export function Layout({ children }) {\n//   return (\n//     <div className=\"w-full min-h-screen dark:bg-gray-700 dark:text-white\">\n//       <div className=\"max-w-screen-sm px-4 py-12 mx-auto antialiased font-body\">\n//         <Header />\n//         <main>{children}</main>\n//         <footer className=\"text-lg font-light\">\n//           Â© {new Date().getFullYear()}, Built with{\" \"}\n//           <a href=\"https://nextjs.org/\">Next.js</a>\n//           &#128293;\n//         </footer>\n//       </div>\n//     </div>\n//   );\n// }\n// const Header = () => {\n//   const { setTheme, resolvedTheme } = useTheme();\n//   const { pathname } = useRouter();\n//   const [mounted, setMounted] = useState(false);\n//   useEffect(() => setMounted(true), []);\n//   const toggleDarkMode = (checked) => {\n//     const isDarkMode = checked;\n//     if (isDarkMode) setTheme(\"dark\");\n//     else setTheme(\"light\");\n//   };\n//   const isRoot = pathname === \"/\";\n//   const isDarkMode = resolvedTheme === \"dark\";\n//   return (\n//     <header\n//       className={clsx(\"flex items-center justify-between \", {\n//         \"mb-8\": isRoot,\n//         \"mb-2\": !isRoot,\n//       })}\n//     >\n//       <div className={\"max-w-md\"}>\n//         {isRoot ? <LargeTitle /> : <SmallTitle />}\n//       </div>\n//       {mounted && (\n//         <DarkModeSwitch\n//           checked={isDarkMode}\n//           onChange={toggleDarkMode}\n//           className={isRoot ? 28 : 24}\n//         />\n//       )}\n//     </header>\n//   );\n// };\n// const LargeTitle = () => (\n//   <h1>\n//     <Link href=\"/\">\n//       <a\n//         className={clsx(\n//           \"text-3xl font-black leading-none text-black no-underline font-display\",\n//           \"sm:text-5xl\",\n//           \"dark:text-white\"\n//         )}\n//       >\n//         Next.Js Starter Blog\n//       </a>\n//     </Link>\n//   </h1>\n// );\n// const SmallTitle = () => (\n//   <h1>\n//     <Link href=\"/\">\n//       <a\n//         className={clsx(\n//           \"text-2xl font-black text-black no-underline font-display\",\n//           \"dark:text-white\"\n//         )}\n//       >\n//         Next.Js Starter Blog\n//       </a>\n//     </Link>\n//   </h1>\n// );","map":null,"metadata":{},"sourceType":"module"}